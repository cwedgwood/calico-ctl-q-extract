{{- if or (eq .Values.datastore "etcd") (eq .Values.network "calico") }}
# See https://github.com/projectcalico/kube-controllers
apiVersion: apps/v1
kind: Deployment
metadata:
  name: calico-kube-controllers
  namespace: kube-system
  labels:
    k8s-app: calico-kube-controllers
spec:
  # The controllers can only have a single active instance.
  replicas: 1
  selector:
    matchLabels:
      k8s-app: calico-kube-controllers
  strategy:
    type: Recreate
  template:
    metadata:
      name: calico-kube-controllers
      namespace: kube-system
      labels:
        k8s-app: calico-kube-controllers
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
{{- if eq .Values.datastore "etcd" }}
        # This contains a hash of the {{include "variant_name" . | lower}}-config ConfigMap
        # and can be updated to trigger a rolling update if the ConfigMap is updated.
        calico-configmap-hash: {{ tuple "calico-config.yaml" . | include "calico.hash" }}
{{- end }}
{{- tuple .Values.kubeControllers "calico-kube-controllers" | include "calico.sec_app_profile" | indent 8 }}
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
{{ if .Values.controlPlaneNodeSelector }}
{{- toYaml .Values.controlPlaneNodeSelector | indent 8 }}
{{- end }}
      tolerations:
        # Mark the pod as a critical add-on for rescheduling.
        - key: CriticalAddonsOnly
          operator: Exists
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      serviceAccountName: calico-kube-controllers
      priorityClassName: system-cluster-critical
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{- range $key, $value := .Values.imagePullSecrets }}
        - name: {{ $key }}
{{- end }}
{{- end }}
{{- if eq .Values.datastore "etcd" }}
      # The controllers must run in the host network namespace so that
      # it isn't governed by policy that would prevent it from working.
      hostNetwork: true
      containers:
        - name: calico-kube-controllers
          image: {{ join ":" (list .Values.kubeControllers.image .Values.kubeControllers.tag) }}
{{ tuple .Values.kubeControllers.resources | include "calico.resourceLimits" | indent 10 -}}
          env:
            # The location of the etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: {{include "variant_name" . | lower}}-config
                  key: etcd_endpoints
            # Location of the CA certificate for etcd.
            - name: ETCD_CA_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: {{include "variant_name" . | lower}}-config
                  key: etcd_ca
            # Location of the client key for etcd.
            - name: ETCD_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  name: {{include "variant_name" . | lower}}-config
                  key: etcd_key
            # Location of the client certificate for etcd.
            - name: ETCD_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: {{include "variant_name" . | lower}}-config
                  key: etcd_cert
            # Choose which controllers to run.
            - name: ENABLED_CONTROLLERS
              value: policy,namespace,serviceaccount,workloadendpoint,node
{{- if .Values.kubeControllers.env }}
{{ toYaml .Values.kubeControllers.env | indent 12 }}
{{- end }}
          volumeMounts:
            # Mount in the etcd TLS secrets.
            - mountPath: /calico-secrets
              name: etcd-certs
          readinessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -r
      volumes:
        # Mount in the etcd TLS secrets with mode 400.
        # See https://kubernetes.io/docs/concepts/configuration/secret/
        - name: etcd-certs
          secret:
            secretName: calico-etcd-secrets
            defaultMode: 0400
{{- else if eq .Values.network "calico" }}
      containers:
        - name: calico-kube-controllers
          image: {{ join ":" (list .Values.kubeControllers.image .Values.kubeControllers.tag) }}
{{ tuple .Values.kubeControllers.resources | include "calico.resourceLimits" | indent 10 -}}
          env:
            # Choose which controllers to run.
            - name: ENABLED_CONTROLLERS
              value: node,service
            - name: DATASTORE_TYPE
              value: kubernetes
{{- if .Values.kubeControllers.env }}
{{ toYaml .Values.kubeControllers.env | indent 12 }}
{{- end }}
          readinessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -r
{{- end }}

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-kube-controllers
  namespace: kube-system
{{- end -}}
